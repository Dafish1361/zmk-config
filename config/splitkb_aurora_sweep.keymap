/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&led_strip { chain-length = <21>; };

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";

    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};

&nice_view_spi {
    status = "okay";

    nice_view: ls0xx@0 {
        compatible = "sharp,ls0xx";
        label = "DISPLAY";
        spi-max-frequency = <1000000>;
        reg = <0>;
        width = <160>;
        height = <68>;
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <10>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_BLUE>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
            slow-release;
            layers = <0>;
        };

        rightshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <19 18>;
            slow-release;
            layers = <0>;
        };
    };

    behaviors {
        Volume: Volume {
            compatible = "zmk,behavior-sensor-rotate";
            label = "VOLUME";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOL_DN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W      &kp E  &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O      &kp P
&kp A  &kp S      &kp D  &kp F  &kp G    &kp H  &kp J  &kp K      &kp L      &mt SQT SEMICOLON
&kp Z  &kp X      &kp C  &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT    &mt LCTRL SLASH
&mo 1  &kp SPACE                                                  &kp ENTER  &mo 2
            >;

            sensor-bindings = <&Volume>, <&Volume>;
        };

        left_layer {
            bindings = <
&kp ESCAPE      &kp NUM_2  &kp NUM_3        &kp NUM_4        &kp NUM_5     &kp NUM_6  &kp NUM_7  &kp NUM_8             &kp NUM_9      &kp BACKSPACE
&kp TAB         &kp S      &kp DQT          &kp LC(C)        &kp LC(V)     &kp MINUS  &kp EQL    &kp NON_US_BACKSLASH  &kp SEMICOLON  &kp BACKSPACE
&kp LEFT_SHIFT  &kp TILDE  &kp NON_US_BSLH  &kp NON_US_HASH  &kp TILDE2    &kp MINUS  &kp GRAVE  &kp LBKT              &kp RBKT       &kp DEL
&mo 1           &kp LGUI                                                                                               &tog 3         &mo 2
            >;
        };

        right_layer {
            bindings = <
&kp BANG  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp PRCT                 &kp CRRT   &kp AMPS      &kp KMLT  &kp LPRN  &kp RPRN
&trans    &kp DOLLAR       &kp PERCENT   &kp CARET             &kp SCLN                 &kp MINUS  &kp KP_EQUAL  &kp LBRC  &kp RBRC  &kp BKSP
&kp LSFT  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp UNDER  &kp LEFT      &kp DOWN  &kp UP    &kp RIGHT
&mo 4     &kp LCTL                                                                                                         &kp SPC   &mo 2
            >;
        };

        layer_3 {
            bindings = <
&kp LEFT   &kp N1     &kp N2  &kp N3  &kp UP          &trans  &trans    &trans     &trans        &trans
&kp RIGHT  &kp N4     &kp N5  &kp N6  &kp DOWN        &trans  &kp PLUS  &kp MINUS  &kp ASTERISK  &trans
&kp EQUAL  &kp N7     &kp N8  &kp N9  &kp NUMBER_0    &trans  &trans    &trans     &trans        &trans
&kp ENTER  &kp SPACE                                                               &kp ENTER     &to 0
            >;
        };

        layer_4 {
            bindings = <
&kp NUM_1   &kp NUM_2   &kp NUM_3   &kp NUM_4  &kp NUM_5    &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4     &kp F5       &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6     &kp F7       &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&trans      &trans                                                                           &trans      &trans
            >;
        };
    };
};
